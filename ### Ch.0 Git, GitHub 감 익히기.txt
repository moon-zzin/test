### Ch.0 Git, GitHub 감 익히기

# 버전 관리
: 소스 코드, 문서, 설계 파일 등의 변경 이력을 기록하고 추적하며 협업할 수 있게 도와주는 시스템

로컬			개인 컴퓨터에서만 관리	
중앙집중형		중앙 서버에서 버전 관리	
분산형		각 사용자가 전체 저장소를 복제하여 사용	

요즘 가장 많이 사용하는 방식은 분산형

RCS
: Revision Control System, 초기의 로컬 버전관리 시스템
CVCS	
: Centralized Version Control System, 중앙집중형 버전관리 시스템
DVCS
: Distributed Version Control System, 분산형 버전관리 시스템

---

# Git
: 소스 코드의 변경 이력을 추적하고, 여러 개발자가 동시에 작업할 수 있게 돕는 분산 버전관리 시스템

2005년, 리누스 토르발즈(Linus Torvalds)가 리눅스 커널을 관리하기 위해 개발

모든 버전관리 작업이 인터넷 없이도 가능 (커밋, 브랜치 생성, 비교 등)
가볍고 독립적인 실험이나 기능 개발에 적합
Git 자체는 오픈소스이며 GNU 라이선스를 따름
수많은 오픈소스 프로젝트들이 Git을 기반으로 개발

---

# GitHub
: Git 저장소를 웹에서 관리하고 공유할 수 있도록 만든 클라우드 기반 플랫폼

Git 호스팅 사이트
: Git 저장소를 클라우드에 보관·관리하고, 협업/버전관리 기능을 웹 인터페이스로 제공하는 서비스

GitHub	
가장 유명한 Git 호스팅 사이트
Microsoft 소유 (2018년 인수)
오픈소스 커뮤니티의 중심

GitLab	
자체 서버 설치도 가능한 플랫폼
오픈소스 기반의 DevOps 플랫폼
GitHub보다 권한 제어, 보안, 통합 기능이 풍부

Bitbucket	
Jira, Trello 등 Atlassian 생태계와 연동 최적화
소규모 팀에 적합 (무료 팀원 수 제한 있음)

---

# Git Bash
: Windows에서 Git 명령어를 실행할 수 있게 해주는 Command Line 프로그램

Git 설치 시 Git Bash 포함

리눅스/유닉스 스타일의 Bash 셸 환경 제공
기본적인 셸 명령어도 사용 가능

MINGW64 (Minimalist GNU for Windows 64-bit)
: Git Bash에서 리눅스 스타일 명령어를 Windows 64비트 환경에서 실행할 수 있게 해주는 Toolchain (도구모음)

---

# 로컬 저장소 
: 컴퓨터 안에 존재하는, 인터넷 없이 혼자서도 버전 관리가 가능한 저장소

my-project/
├── .git/        		# Git의 핵심 (로컬 저장소)
├── main.py      	# 작업하는 실제 코드 
└── README.md    	# 프로젝트 설명 

.git/
├── hooks/		# 커밋 등 이벤트용 자동 스크립트
├── info/         	# 로컬용 설정 (예: exclude 목록)
├── objects/      	# Git 데이터 저장소 (커밋, 파일 내용 등)
├── refs/         	# 브랜치, 태그 정보
├── config        	# 저장소 설정 (사용자, 원격 주소 등)
├── description   	# 저장소 설명 (로컬에선 거의 사용 안 함)
└── HEAD          	# 현재 체크아웃된 브랜치 참조

---

# 작업 흐름
: Working Directory → Staging Area → Repository (Commit)

Working Directory	실제로 내가 파일을 수정하고 작업하는 공간 
Staging Area (index)	커밋할 파일을 선택적으로 올려두는 준비 공간 
Repository (Local)	실제 변경 이력이 기록되는 곳 

Staging
: 변경된 파일을 커밋할 준비 상태로 임시 등록
Commit
: 스테이징된 변경 내용을 이 시점의 스냅샷으로 기록

∴ 커밋은 "작업 단위"이고, 스테이징은 그 단위를 내가 직접 설계할 수 있는 단계

---

# 원격 저장소 (Repository)
: 클라우드 상의 Git 저장소로, 로컬 저장소와 연결할 수 있는 공유 저장소

┌─────────┐
│ 로컬 저장소 (내 PC)│
└─────────┘
         pull↑ ↓push
┌──────────┐
│ 원격 저장소 (GitHub) │
└──────────┘

commit	변경 내용을 저장한 하나의 버전 단위	
branch	가장 최근 커밋을 가리키는 이름 있는 포인터	
HEAD		현재 내가 작업 중인 브랜치 또는 커밋을 가리키는 포인터	

master	초창기 기본 브랜치 이름 
main		현재 기본 브랜치 이름 (2020년 이후부터 대체됨)



